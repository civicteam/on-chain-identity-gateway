/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IERC3525MetadataDescriptorUpgradeable,
  IERC3525MetadataDescriptorUpgradeableInterface,
} from "../../../../../@solvprotocol/erc-3525/periphery/interface/IERC3525MetadataDescriptorUpgradeable";

const _abi = [
  {
    inputs: [],
    name: "constructContractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    name: "constructSlotURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "constructTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IERC3525MetadataDescriptorUpgradeable__factory {
  static readonly abi = _abi;
  static createInterface(): IERC3525MetadataDescriptorUpgradeableInterface {
    return new Interface(
      _abi
    ) as IERC3525MetadataDescriptorUpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IERC3525MetadataDescriptorUpgradeable {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IERC3525MetadataDescriptorUpgradeable;
  }
}
