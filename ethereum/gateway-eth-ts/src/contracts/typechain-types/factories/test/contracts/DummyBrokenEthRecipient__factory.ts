/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DummyBrokenEthRecipient,
  DummyBrokenEthRecipientInterface,
} from "../../../test/contracts/DummyBrokenEthRecipient";

const _abi = [
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060b78061001f6000396000f3fe608060405236607c576040805162461bcd60e51b81526020600482015260248101919091527f44756d6d7942726f6b656e457468526563697069656e743a207265636569766560448201527f2066756e6374696f6e20696e74656e74696f6e616c6c79207265766572746564606482015260840160405180910390fd5b600080fdfea2646970667358221220af0337ae5aa03d3139939b704201e101c53fcf046b1fa64950fba48274b6a9e464736f6c63430008130033";

type DummyBrokenEthRecipientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyBrokenEthRecipientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyBrokenEthRecipient__factory extends ContractFactory {
  constructor(...args: DummyBrokenEthRecipientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DummyBrokenEthRecipient & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DummyBrokenEthRecipient__factory {
    return super.connect(runner) as DummyBrokenEthRecipient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyBrokenEthRecipientInterface {
    return new Interface(_abi) as DummyBrokenEthRecipientInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DummyBrokenEthRecipient {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DummyBrokenEthRecipient;
  }
}
